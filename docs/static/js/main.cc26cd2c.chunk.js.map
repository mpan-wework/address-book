{"version":3,"sources":["App.module.css","utils/client.js","antd/AddressBook.js","plain/AddressBook.js","App.js","index.js","antd/AddressBook.module.css"],"names":["module","exports","initialDataSource","id","name","location","office","phoneOffice","phoneCell","dummyRequest","data","Promise","resolve","setTimeout","client","fetchRecords","a","updateRecords","rows","console","info","map","row","editable","key","Math","floor","Date","now","deleteRecords","ids","initialRow","AddressBook","useState","existing","setExisting","added","setAdded","selectedRowKeys","setSelectedRowKeys","useEffect","rowSelection","useMemo","onChange","keys","concat","filter","includes","deleteRows","useCallback","prev","record","deletableSelected","find","Boolean","addRow","dataSourceWithKeys","editCell","e","value","target","cb","pos","findIndex","slice","editableCell","onCellClick","onClick","updateRows","records","exisitingRow","addedRow","updated","i","l","length","className","styles","title","dataSource","pagination","Column","dataIndex","render","ColumnGroup","buttons","left","delete","disabled","right","update","add","process","SOME_VAR","AddressBookPlain","AddressBookAntd","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,IAAM,mB,oNCDlBC,EAAoB,CACxB,CACEC,GAAI,IACJC,KAAM,cACNC,SAAU,WACVC,OAAQ,QACRC,YAAa,SACbC,UAAW,gBAEb,CACEL,GAAI,IACJC,KAAM,cACNC,SAAU,WACVC,OAAQ,QACRC,YAAa,SACbC,UAAW,iBAITC,EAAe,SAACC,GAAD,OAAU,IAAIC,SAAQ,SAACC,GAC1CC,YAAW,WACTD,EAAQF,KACP,SAsCUI,EATN,CACLC,aA1BgB,uCAAG,sBAAAC,EAAA,+EACZP,EAAaP,IADD,2CAAH,qDA2BhBe,cAvBiB,uCAAG,WAAOC,GAAP,SAAAF,EAAA,6DACpBG,QAAQC,KAAK,iBAAkBF,GADX,kBAGbT,EAAaS,EAAKG,KAAI,SAACC,GAC5B,OAAIA,EAAInB,GACC,2BAAKmB,GAAZ,IAAiBC,UAAU,IAEpB,2BACFD,GADL,IAEEE,IAAK,KACLrB,GAAIsB,KAAKC,MAAMC,KAAKC,MAAQ,KAAQ,WAVtB,2CAAH,sDAwBjBC,cARiB,uCAAG,WAAOC,GAAP,SAAAd,EAAA,6DACpBG,QAAQC,KAAK,iBAAkBU,GADX,kBAEbrB,EAAa,OAFA,2CAAH,uD,iBCxCfsB,EAAa,CACjB3B,KAAM,GACNC,SAAU,GACVC,OAAQ,GACRC,YAAa,GACbC,UAAW,IA6OEwB,EA1OK,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACjBC,EADiB,KACPC,EADO,OAEEF,mBAAS,IAFX,mBAEjBG,EAFiB,KAEVC,EAFU,OAIsBJ,mBAAS,IAJ/B,mBAIjBK,EAJiB,KAIAC,EAJA,KAMxBC,qBAAU,WACR,sBAAC,sBAAAxB,EAAA,kEACCmB,EADD,SACmBrB,EAAOC,eAD1B,4EAAD,KAGC,CAACoB,IAEJ,IAAMM,EAAeC,mBAAQ,iBAAO,CAClCJ,kBACAK,SAAUJ,KACR,CAACD,EAAiBC,IAEtBC,qBAAU,WACRD,GACE,SAACK,GAAD,OACEV,EACGW,OAAOT,GACPf,KAAI,SAACC,GAAD,OAASA,EAAInB,IAAMmB,EAAIE,OAC3BsB,QAAO,SAACtB,GAAD,OAASoB,EAAKG,SAASvB,WAEpC,CAACU,EAAUE,EAAOG,IAErB,IAAMS,EAAaC,sBAAW,sBAAC,sBAAAjC,EAAA,sEACvBF,EAAOe,cAAcS,GADE,OAE7BH,GACE,SAACe,GAAD,OAAUA,EAAKJ,QAAO,SAACK,GAAD,OAAab,EAAgBS,SAASI,EAAOhD,UAErEkC,GACE,SAACa,GAAD,OAAUA,EAAKJ,QAAO,SAACK,GAAD,OAAab,EAAgBS,SAASI,EAAO3B,WANxC,2CAQ5B,CAACc,EAAiBH,EAAaE,IAE5Be,EAAoBV,mBACxB,kBAAMJ,EACHjB,KAAI,SAACG,GAAD,OAASU,EAASmB,MAAK,SAAC/B,GAAD,OAASA,EAAInB,KAAOqB,QAC/CsB,OAAOQ,WACV,CAAChB,EAAiBJ,IAGdqB,EAASN,uBAAY,WACzBZ,GAAS,SAACa,GAAD,OAAUA,EAAKL,OAAL,2BACdd,GADc,IAEjBP,IAAKG,KAAKC,cAEX,CAACS,IAEEmB,EAAqBd,mBACzB,kBAAMR,EAASb,KAAI,SAACC,GAAD,mBAAC,eAAcA,GAAf,IAAoBE,IAAKF,EAAInB,QAAO0C,OAAOT,KAC9D,CAACF,EAAUE,IAGPqB,EAAWR,uBAAY,SAACE,EAAQ3B,GAAT,OAAiB,SAACkC,GAC7C,IAAMC,EAAQD,EAAEE,OAAOD,MACjBE,EAAK,SAACX,GACV,IAAMY,EAAMZ,EAAKa,WACf,SAACzC,GAAD,OAAS6B,EAAOhD,GACXgD,EAAOhD,KAAOmB,EAAInB,GAClBgD,EAAO3B,MAAQF,EAAIE,OAG1B,OAAa,IAATsC,EACKZ,EAGFA,EAAKc,MAAM,EAAGF,GAClBjB,OADI,2BAEAK,EAAKY,IAFL,kBAGFtC,EAAMmC,KAERd,OAAOK,EAAKc,MAAMF,EAAM,KAE7B3B,EAAY0B,GACZxB,EAASwB,MACR,CAAC1B,EAAaE,IAEX4B,EAAehB,uBACnB,SAACzB,GAAD,OAAS,SAACmC,EAAOR,GAAR,OAAoBA,EAAOhD,GAGlC,6BAAMwD,GAFN,kBAAC,IAAD,CAAOA,MAAOA,EAAOhB,SAAUc,EAASN,EAAQ3B,QAIlD,CAACiC,IAGGS,EAAcjB,uBAAY,SAACE,GAAD,OAAY,WAC1C,GAAIA,EAAOhD,KAAOgD,EAAO5B,SAAU,CAejCY,GAdW,SAACe,GACV,IAAMY,EAAMZ,EAAKa,WAAU,SAACzC,GAAD,OAAS6B,EAAOhD,KAAOmB,EAAInB,MAEtD,OAAa,IAAT2D,EACKZ,EAGFA,EAAKc,MAAM,EAAGF,GAClBjB,OADI,2BAEAK,EAAKY,IAFL,IAGHvC,UAAU,KAEXsB,OAAOK,EAAKc,MAAMF,EAAM,WAI9B,CAAC3B,IAEE3B,EAAYyC,uBAChB,SAACU,EAAOR,GACN,OAAKA,EAAOhD,IAAMgD,EAAO5B,SAChB,kBAAC,IAAD,CAAOoC,MAAOA,EAAOhB,SAAUc,EAASN,EAAQ,eAEhD,yBAAKgB,QAASD,EAAYf,IAAUQ,KAG/C,CAACF,EAAUS,IAGPE,EAAanB,sBAAW,sBAC5B,8BAAAjC,EAAA,6DACQqD,EAAU/B,EAAgBjB,KAAI,SAACG,GACnC,IAAM8C,EAAepC,EAASmB,MAAK,SAAC/B,GAAD,OAASA,EAAInB,KAAOqB,KACvD,GAAI8C,EACF,OAAOA,EAET,IAAMC,EAAWnC,EAAMiB,MAAK,SAAC/B,GAAD,OAASA,EAAIE,MAAQA,KACjD,OAAI+C,GAIG,QACNzB,OAAOQ,SAZZ,SAcwBxC,EAAOG,cAAcoD,GAd7C,OAcQG,EAdR,OAgBErC,GAAY,SAACe,GACX,IADqB,IAAD,WACXuB,EAAOC,GACd,IAAMZ,EAAMZ,EAAKa,WAAU,SAACzC,GAAD,OAASA,EAAInB,KAAOqE,EAAQC,GAAGtE,MAExD+C,GADW,IAATY,EACKZ,EAAKL,OAAO2B,EAAQC,IAEpBvB,EAAKc,MAAM,EAAGF,GAAKjB,OAAO2B,EAAQC,IAAI5B,OAAOK,EAAKc,MAAMF,EAAM,KALhEW,EAAI,EAAGC,EAAIF,EAAQG,OAAQF,EAAIC,EAAGD,GAAK,EAAI,EAA3CA,GAST,OAAOvB,KAETb,GAAS,SAACa,GAAD,OAAUA,EAAKJ,QAAO,SAACxB,GAAD,OAAUgB,EAAgBS,SAASzB,EAAIE,WACtEe,GAAmB,SAACW,GAAD,OAAUA,EAAKJ,QAAO,SAACtB,GAAD,OAAUc,EAAgBS,SAASvB,SA7B9E,2CA+BA,CAACc,EAAiBJ,EAAUE,EAAOD,EAAaE,EAAUE,IAG5D,OACE,yBAAKqC,UAAW,eACd,yBAAKA,UAAWC,IAAOC,OAAU,gBACjC,kBAAC,IAAD,CACEC,WAAYvB,EACZwB,YAAY,EACZvC,aAAcA,GAEd,kBAAC,IAAMwC,OAAP,CACEzD,IAAK,KACLsD,MAAS,KACTI,UAAW,OAEb,kBAAC,IAAMD,OAAP,CACEzD,IAAK,OACLsD,MAAS,OACTI,UAAW,OACXC,OAAQlB,EAAa,UAEvB,kBAAC,IAAMgB,OAAP,CACEzD,IAAK,WACLsD,MAAS,WACTI,UAAW,WACXC,OAAQlB,EAAa,cAEvB,kBAAC,IAAMgB,OAAP,CACEzD,IAAK,SACLsD,MAAS,SACTI,UAAW,SACXC,OAAQlB,EAAa,YAEvB,kBAAC,IAAMmB,YAAP,CACE5D,IAAK,QACLsD,MAAS,SAET,kBAAC,IAAMG,OAAP,CACEzD,IAAK,cACLsD,MAAS,SACTI,UAAW,cACXC,OAAQlB,EAAa,iBAEvB,kBAAC,IAAMgB,OAAP,CACEzD,IAAK,YACLsD,MAAS,OACTI,UAAW,YACXC,OAAQ3E,MAId,yBAAKoE,UAAWC,IAAOQ,SACrB,yBAAKT,UAAWC,IAAOS,MACrB,kBAAC,IAAD,CACEV,UAAWC,IAAOU,OAClBC,SAAuC,IAA7BpC,EAAkBuB,OAC5BR,QAASnB,GAEN,WAGP,yBAAK4B,UAAWC,IAAOY,OACrB,kBAAC,IAAD,CACEb,UAAWC,IAAOa,OAClBF,SAAqC,IAA3BlD,EAAgBqC,OAC1BR,QAASC,GAEN,UAEL,kBAAC,IAAD,CACEQ,UAAWC,IAAOc,IAClBxB,QAASZ,GAEN,WC5OAvB,EAFK,kBAAM,6C,kBCGpBA,EAAuC,aAAzB4D,8IAAYC,SAA0BC,EAAmBC,EAQ9DC,EANH,kBACV,yBAAKpB,UAAWC,IAAOmB,KACrB,kBAAC,EAAD,Q,cCFJC,IAASd,OACP,kBAAC,IAAMe,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,mBCV1BpG,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,QAAU,6BAA6B,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,4BAA4B,OAAS,4BAA4B,IAAM,4B","file":"static/js/main.cc26cd2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","const initialDataSource = [\n  {\n    id: 501,\n    name: 'Khall Zhang',\n    location: 'Shanghai',\n    office: 'C-103',\n    phoneOffice: 'x55778',\n    phoneCell: '650-353-1239',\n  },\n  {\n    id: 502,\n    name: 'Khall Zhang',\n    location: 'Shanghai',\n    office: 'C-103',\n    phoneOffice: 'x55778',\n    phoneCell: '650-353-1239',\n  },\n];\n\nconst dummyRequest = (data) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(data);\n  }, 2000);\n})\n\nconst createClient = () => {\n  const fetchRecords = async () => {\n    return dummyRequest(initialDataSource);\n  };\n\n  const updateRecords = async (rows) => {\n    console.info('updateRecords:', rows);\n\n    return dummyRequest(rows.map((row) => {\n      if (row.id) {\n        return { ...row, editable: false };\n      } else {\n        return {\n          ...row,\n          key: null,\n          id: Math.floor(Date.now() / 1000) % 100000,\n        }\n      }\n    }));\n  };\n\n  const deleteRecords = async (ids) => {\n    console.info('deleteRecords:', ids);\n    return dummyRequest(null);\n  };\n\n  return {\n    fetchRecords,\n    updateRecords,\n    deleteRecords,\n  };\n};\n\nconst client = createClient();\n\nexport default client;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Button, Input, Table } from 'antd';\nimport { t } from '../utils/i18n';\nimport client from '../utils/client';\nimport styles from './AddressBook.module.css';\n\nconst initialRow = {\n  name: '',\n  location: '',\n  office: '',\n  phoneOffice: '',\n  phoneCell: '',\n};\n\nconst AddressBook = () => {\n  const [existing, setExisting] = useState([]);\n  const [added, setAdded] = useState([]);\n\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      setExisting(await client.fetchRecords());\n    })();\n  }, [setExisting]);\n\n  const rowSelection = useMemo(() => ({\n    selectedRowKeys,\n    onChange: setSelectedRowKeys,\n  }), [selectedRowKeys, setSelectedRowKeys]);\n\n  useEffect(() => {\n    setSelectedRowKeys(\n      (keys) =>\n        existing\n          .concat(added)\n          .map((row) => row.id || row.key)\n          .filter((key) => keys.includes(key)),\n    );\n  }, [existing, added, setSelectedRowKeys]);\n\n  const deleteRows = useCallback(async () => {\n    await client.deleteRecords(selectedRowKeys);\n    setExisting(\n      (prev) => prev.filter((record) => !selectedRowKeys.includes(record.id)),\n    );\n    setAdded(\n      (prev) => prev.filter((record) => !selectedRowKeys.includes(record.key)),\n    );\n  }, [selectedRowKeys, setExisting, setAdded]);\n\n  const deletableSelected = useMemo(\n    () => selectedRowKeys\n      .map((key) => existing.find((row) => row.id === key))\n      .filter(Boolean),\n    [selectedRowKeys, existing],\n  );\n\n  const addRow = useCallback(() => {\n    setAdded((prev) => prev.concat({\n      ...initialRow,\n      key: Date.now(),\n    }));\n  }, [setAdded]);\n\n  const dataSourceWithKeys = useMemo(\n    () => existing.map((row) => ({ ...row, key: row.id })).concat(added),\n    [existing, added],\n  );\n\n  const editCell = useCallback((record, key) => (e) => {\n    const value = e.target.value;\n    const cb = (prev) => {\n      const pos = prev.findIndex(\n        (row) => record.id\n          ? (record.id === row.id)\n          : (record.key === row.key),\n      );\n\n      if (pos === -1) {\n        return prev;\n      }\n\n      return prev.slice(0, pos)\n        .concat({\n          ...prev[pos],\n          [key]: value,\n        })\n        .concat(prev.slice(pos + 1))\n    };\n    setExisting(cb);\n    setAdded(cb)\n  }, [setExisting, setAdded]);\n\n  const editableCell = useCallback(\n    (key) => (value, record) => !record.id ? (\n      <Input value={value} onChange={editCell(record, key)} />\n    ) : (\n      <div>{value}</div>\n    ),\n    [editCell]\n  );\n\n  const onCellClick = useCallback((record) => () => {\n    if (record.id && !record.editable) {\n      const cb = (prev) => {\n        const pos = prev.findIndex((row) => record.id === row.id);\n\n        if (pos === -1) {\n          return prev;\n        }\n\n        return prev.slice(0, pos)\n          .concat({\n            ...prev[pos],\n            editable: true,\n          })\n          .concat(prev.slice(pos + 1))\n      };\n      setExisting(cb);\n    }\n  }, [setExisting]);\n\n  const phoneCell = useCallback(\n    (value, record) => {\n      if (!record.id || record.editable) {\n        return <Input value={value} onChange={editCell(record, 'phoneCell')} />\n      } else {\n        return <div onClick={onCellClick(record)}>{value}</div>\n      }\n    },\n    [editCell, onCellClick],\n  );\n\n  const updateRows = useCallback(\n    async () => {\n      const records = selectedRowKeys.map((key) => {\n        const exisitingRow = existing.find((row) => row.id === key);\n        if (exisitingRow) {\n          return exisitingRow;\n        }\n        const addedRow = added.find((row) => row.key === key);\n        if (addedRow) {\n          return addedRow;\n        }\n\n        return null;\n      }).filter(Boolean);\n\n      const updated = await client.updateRecords(records);\n\n      setExisting((prev) => {\n        for (let i = 0, l = updated.length; i < l; i += 1) {\n          const pos = prev.findIndex((row) => row.id === updated[i].id);\n          if (pos === -1) {\n            prev = prev.concat(updated[i]);\n          } else {\n            prev = prev.slice(0, pos).concat(updated[i]).concat(prev.slice(pos + 1));\n          }\n        };\n\n        return prev;\n      });\n      setAdded((prev) => prev.filter((row) => !selectedRowKeys.includes(row.key)));\n      setSelectedRowKeys((prev) => prev.filter((key) => !selectedRowKeys.includes(key)));\n    },\n    [selectedRowKeys, existing, added, setExisting, setAdded, setSelectedRowKeys],\n  );\n\n  return (\n    <div className={'addressBook'}>\n      <div className={styles.title}>{t('Address Book')}</div>\n      <Table\n        dataSource={dataSourceWithKeys}\n        pagination={false}\n        rowSelection={rowSelection}\n      >\n        <Table.Column\n          key={'id'}\n          title={t('ID')}\n          dataIndex={'id'}\n        />\n        <Table.Column\n          key={'name'}\n          title={t('Name')}\n          dataIndex={'name'}\n          render={editableCell('name')}\n        />\n        <Table.Column\n          key={'location'}\n          title={t('Location')}\n          dataIndex={'location'}\n          render={editableCell('location')}\n        />\n        <Table.Column\n          key={'office'}\n          title={t('Office')}\n          dataIndex={'office'}\n          render={editableCell('office')}\n        />\n        <Table.ColumnGroup\n          key={'phone'}\n          title={t('Phone')}\n        >\n          <Table.Column\n            key={'phoneOffice'}\n            title={t('Office')}\n            dataIndex={'phoneOffice'}\n            render={editableCell('phoneOffice')}\n          />\n          <Table.Column\n            key={'phoneCell'}\n            title={t('Cell')}\n            dataIndex={'phoneCell'}\n            render={phoneCell}\n          />\n        </Table.ColumnGroup>\n      </Table>\n      <div className={styles.buttons}>\n        <div className={styles.left}>\n          <Button\n            className={styles.delete}\n            disabled={deletableSelected.length === 0}\n            onClick={deleteRows}\n          >\n            {t('Delete')}\n          </Button>\n        </div>\n        <div className={styles.right}>\n          <Button\n            className={styles.update}\n            disabled={selectedRowKeys.length === 0}\n            onClick={updateRows}\n          >\n            {t('Update')}\n          </Button>\n          <Button\n            className={styles.add}\n            onClick={addRow}\n          >\n            {t('Add')}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddressBook;\n","import React from 'react';\n\nconst AddressBook = () => <div>AddressBook</div>;\n\nexport default AddressBook;\n","import React from 'react';\nimport { default as AddressBookAntd } from './antd/AddressBook';\nimport { default as AddressBookPlain } from './plain/AddressBook';\nimport styles from './App.module.css';\n\nconst AddressBook = process.env.SOME_VAR === 'expected' ? AddressBookPlain : AddressBookAntd;\n\nconst App = () => (\n  <div className={styles.App}>\n    <AddressBook />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './index.css';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AddressBook_title__2NaZR\",\"buttons\":\"AddressBook_buttons__3YkxJ\",\"left\":\"AddressBook_left__3OjMk\",\"right\":\"AddressBook_right__3O7Ld\",\"delete\":\"AddressBook_delete__3ZrD3\",\"update\":\"AddressBook_update__259iL\",\"add\":\"AddressBook_add__czPnY\"};"],"sourceRoot":""}